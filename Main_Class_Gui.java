/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package des;

import des.Bit_convert.Converter;
import javax.swing.JOptionPane;

public class Main_Class_Gui extends javax.swing.JFrame {
    static int mode=0;
    /**
     * Creates new form Binary
     */
    public Main_Class_Gui() {
        initComponents();
        this.setVisible(true);
        buttonGroup2.add(jRadioButton1);
        buttonGroup2.add(jRadioButton2);
        buttonGroup2.add(jRadioButton3);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Yu Mincho Demibold", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Encreption And  Decription using DES");

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Enter Key as 64 bit ");

        jTextField1.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Enter Your data in Binary Representation that you want To decrept or Encrept");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        jRadioButton1.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(51, 51, 255));
        jRadioButton1.setText("Binary");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(51, 51, 255));
        jRadioButton2.setText("Hexa");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jRadioButton3.setForeground(new java.awt.Color(51, 51, 255));
        jRadioButton3.setText("String");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jRadioButton3)
                        .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setBackground(new java.awt.Color(102, 255, 255));
        jButton2.setFont(new java.awt.Font("Yu Gothic", 3, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 51, 255));
        jButton2.setText("Encript");
        jButton2.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 1, true)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 255, 255));
        jButton1.setFont(new java.awt.Font("Yu Gothic", 3, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 255));
        jButton1.setText("Decript");
        jButton1.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 1, true)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(102, 255, 255));
        jButton3.setFont(new java.awt.Font("Yu Gothic", 3, 16)); // NOI18N
        jButton3.setForeground(new java.awt.Color(51, 51, 255));
        jButton3.setText("Back");
        jButton3.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 1, true)));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 83, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)))
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(216, 216, 216))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 34, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.setVisible(false);
        Converter m=new Converter();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if (mode==1){        
        String cipher=get_tx(jTextArea1.getText());
        String key=get_tx(jTextField1.getText());
        if (key.length()==64){
            if(isbinary(cipher+key)){
                String b="0000000000000000000000000000000000000000000000000000000000000000";
                //pading zeros for last block
                int x=cipher.length()%64;
                if (x!=0){
                    cipher=cipher+b.substring(64-x);
                }
                String plain="";
                for (int i=0;i<cipher.length();i+=64){
                    plain+=Des.Decription(cipher.substring(i,i+64), key);
                }
                this.setVisible(false);
                new output(plain);
            }
            else{
                JOptionPane.showMessageDialog(null, "The input must be binary", "Error Key ", JOptionPane.ERROR_MESSAGE);
            }
        } 
        else {
            JOptionPane.showMessageDialog(null, "The key length must be 64 bit /n please try again", "Error Key ", JOptionPane.ERROR_MESSAGE);
        }}
else if(mode==2){
        String cipher=get_tx(jTextArea1.getText()).toUpperCase();
        String key=get_tx(jTextField1.getText()).toUpperCase();
        if (key.length()==16){
            if(isHexa((cipher+key))){
                key=Hexa2bin(key);
                String b="0000000000000000";
                //pading zeros for last block
                int x=cipher.length()%16;
                if (x!=0){
                    cipher=cipher+b.substring(16-x);
                }
                cipher=Hexa2bin(cipher);
                String plain="";
                for (int i=0;i<cipher.length();i+=64){
                    plain+=Des.Decription(cipher.substring(i,i+64), key);
                }
                this.setVisible(false);
                output out = new output(plain);
            }
            else{
                JOptionPane.showMessageDialog(null, "The input must be binary", "Error Key ", JOptionPane.ERROR_MESSAGE);
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "The key length must be 64 bit /n please try again", "Error Key ", JOptionPane.ERROR_MESSAGE);
        }
        }
else if(mode==3){
        String cipher=get_tx(jTextArea1.getText()).toUpperCase();
        String key=get_tx(jTextField1.getText()).toUpperCase();
        if(key.length()==8){
            key=Str2bin(key);
            String plain="",c;
            int x=(cipher.length()%8);
            if(x!=0){
            cipher+="ABCDEFG".substring(0,8-x);
            }
            
            for (int i = 0; i < cipher.length(); i+=8) {
                c=Str2bin(cipher.substring(i,i+8));
                plain+=Des.Decription(c, key); 
            }
            this.setVisible(false);
            new output(plain);
        }
        else{
            JOptionPane.showMessageDialog(null, "Key must be 8 Characters as 64 bit length", "Error Key Length", JOptionPane.ERROR_MESSAGE);
        }
        }
else{
JOptionPane.showMessageDialog(null, "Please Choose your mode first", "Error ", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_jButton1ActionPerformed
    public String Str2bin(String s){
        String x,ss="";
        for (int i = 0; i < s.length(); i++) {
            x=Integer.toBinaryString((int)(s.charAt(i)));
            ss+="00000000".substring(x.length())+x;
        }
        return ss;
    }
    public String Hexa2bin(String s){
        String c="";
        char x;
        for (int i = 0; i < s.length(); i++) {
            x=s.charAt(i);
            switch (x) {
                case '0':
                    c+="0000";
                    break;
                case '1':
                    c+="0001";
                    break;
                case '2':
                    c+="0010";
                    break;
                case '3':
                    c+="0011";
                    break;
                case '4':
                    c+="0100";
                    break;
                case '5':
                    c+="0101";
                    break;
                case '6':
                    c+="0110";
                    break;
                case '7':
                    c+="0111";
                    break;
                case '8':
                    c+="1000";
                    break;
                case '9':
                    c+="1001";
                    break;
                case 'A':
                    c+="1010";
                    break;
                case 'B':
                    c+="1011";
                    break;
                case 'C':
                    c+="1100";
                    break;
                case 'D':
                    c+="1101";
                    break;
                case 'E':
                    c+="1110";
                    break;
                default:
                    c+="1111";
                    break;
            }
        }
        return c;}
    private boolean isHexa(String s) {
        char c;
        for (int i = 0; i < s.length(); i++) {
            c=s.charAt(i);
            if (!"0123456789ABCDEF".contains(""+c)){
                return false;
            }
//            if(c!='0'&&c!='1'&&c!='2'&&c!='3'&&c!='4'&&c!='5'&&c!='6'&&c!='7'&&c!='8'&&c!='9'&&c!='A'&&c!='B'&&c!='C'&&c!='D'&&c!='E'){
//                return false;
//            } 
        }
    return true;    
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
if (mode==1){
        String plain=get_tx(jTextArea1.getText());
        String key=get_tx(jTextField1.getText());
        if (key.length()==64){
            if(isbinary(plain+key)){
                String b="0000000000000000000000000000000000000000000000000000000000000000";
                //pading zeros for last block
                int x=plain.length()%64;
                if (x!=0){
                    plain=plain+b.substring(64-x);
                }
                String cipher="";
                for (int i=0;i<plain.length();i+=64){
                    cipher+=Des.Encription(plain, key);
                }
                this.setVisible(false);
                new output(cipher);
            }
            else{
                JOptionPane.showMessageDialog(null, "The input must be binary", "Error input mode ", JOptionPane.ERROR_MESSAGE);
            }
        } 
        else {
            JOptionPane.showMessageDialog(null, "The key length must be 64 bit /n please try again", "Error Key Length ", JOptionPane.ERROR_MESSAGE);
        }}
else if(mode==2){
        String plain=get_tx(jTextArea1.getText()).toUpperCase();
        String key=get_tx(jTextField1.getText()).toUpperCase();
        if (key.length()==16){
            if(isHexa(plain+key)){
                key=Hexa2bin(key);
                String b=" 0000000000000000";
                //pading zeros for last block
                int x=plain.length()%16;
                if (x!=0){
                    plain=plain+b.substring(16-x);
                }
                plain=Hexa2bin(plain);
                String cipher="";
                for (int i=0;i<plain.length();i+=64){
                    cipher+=Des.Encription(plain, key);
                }
                this.setVisible(false);                
                new output(cipher);
            }
            else{
                JOptionPane.showMessageDialog(null, "The input must be Hexa number 0~9 A~F", "Error Input mode ", JOptionPane.ERROR_MESSAGE);
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "The key length must be 16 digit of hex /n please try again", "Error Key Length ", JOptionPane.ERROR_MESSAGE);
        }
        }
else if(mode==3){
        String plain=jTextArea1.getText();
        String key=jTextField1.getText();
        if(key.length()==8){
            key=Str2bin(key);
            String cipher="",c;
            int x=(plain.length()%8);
            if(x!=0){
            plain+="ABCDEFG".substring(0,8-x);
            }
            
            for (int i = 0; i < plain.length(); i+=8) {
                c=Str2bin(plain.substring(i,i+8));
                cipher+=Des.Encription(c, key); 
            }
            this.setVisible(false);
            new output(cipher);

        }
        else{
        JOptionPane.showMessageDialog(null, "The key must 8 Character as 64 bit", "Error Key Length", JOptionPane.ERROR_MESSAGE);
    }}
else{
JOptionPane.showMessageDialog(null, "Please Choose your mode first", "Error ", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_jButton2ActionPerformed
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        mode=2;
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        mode=1;
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        mode=3;
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed
    public String get_tx(String s){
        s=s.replace(" ", "");
        s=s.replace("\n", "");
//        System.out.println(s.length());
    return s;} 
    public boolean isbinary(String s){
        
        char t;
        for (int i=0;i<s.length();i++){
            t=s.charAt(i);
            if((t!='0')&(t!='1')){
                return false;
            }
        }
    return true;}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_Class_Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_Class_Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_Class_Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_Class_Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_Class_Gui().setVisible(true);
            }
        });
    }
//
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
